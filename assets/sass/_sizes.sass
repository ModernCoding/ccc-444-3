@use "sass:math"
@use "constants" as c


// ~ 2536.875
$once_54_by_phi_power_minus_8: calc(c.$n_54 / math.pow(c.$phi, -8))

// ~ 1567.875
$once_54_by_phi_power_minus_7: calc(c.$n_54 / math.pow(c.$phi, -7))

// ~ 969.000
$once_54_by_phi_power_minus_6: calc(c.$n_54 / math.pow(c.$phi, -6))

// ~ 598.750
$once_54_by_phi_power_minus_5: calc(c.$n_54 / math.pow(c.$phi, -5))

// ~ 370.125
$once_54_by_phi_power_minus_4: calc(c.$n_54 / math.pow(c.$phi, -4))

// ~ 228.750
$once_54_by_phi_power_minus_3: calc(c.$n_54 / math.pow(c.$phi, -3))

// ~ 141.375
$once_54_by_phi_power_minus_2: calc(c.$n_54 / math.pow(c.$phi, -2))

// ~ 87.375
$once_54_by_phi_power_minus_1: calc(c.$n_54 / math.pow(c.$phi, -1))

// 54
$once_54: c.$n_54

// ~ 33.375
$once_54_by_phi: calc(c.$n_54 / math.pow(c.$phi, 1))

// ~ 20.625
$once_54_by_phi_power_2: calc(c.$n_54 / math.pow(c.$phi, 2))

// ~ 12.750
$once_54_by_phi_power_3: calc(c.$n_54 / math.pow(c.$phi, 3))

// ~ 7.875
$once_54_by_phi_power_4: calc(c.$n_54 / math.pow(c.$phi, 4))

// ~ 4.875
$once_54_by_phi_power_5: calc(c.$n_54 / math.pow(c.$phi, 5))

// ~ 3.000
$once_54_by_phi_power_6: calc(c.$n_54 / math.pow(c.$phi, 6))

// ~ 1.875
$once_54_by_phi_power_7: calc(c.$n_54 / math.pow(c.$phi, 7))

// ~ 1.125
$once_54_by_phi_power_8: calc(c.$n_54 / math.pow(c.$phi, 8))


// ~ 5073.750
$twice_54_by_phi_power_minus_8: calc(2 * c.$n_54 / math.pow(c.$phi, -8))

// ~ 3135.750
$twice_54_by_phi_power_minus_7: calc(2 * c.$n_54 / math.pow(c.$phi, -7))

// ~ 1938.000
$twice_54_by_phi_power_minus_6: calc(2 * c.$n_54 / math.pow(c.$phi, -6))

// ~ 1197.750
$twice_54_by_phi_power_minus_5: calc(2 * c.$n_54 / math.pow(c.$phi, -5))

// ~ 740.250
$twice_54_by_phi_power_minus_4: calc(2 * c.$n_54 / math.pow(c.$phi, -4))

// ~ 457.500
$twice_54_by_phi_power_minus_3: calc(2 * c.$n_54 / math.pow(c.$phi, -3))

// ~ 282.750
$twice_54_by_phi_power_minus_2: calc(2 * c.$n_54 / math.pow(c.$phi, -2))

// ~ 174.750
$twice_54_by_phi_power_minus_1: calc(2 * c.$n_54 / math.pow(c.$phi, -1))

// ~ 108
$twice_54: calc(2 * c.$n_54)

// ~ 66.750
$twice_54_by_phi: calc(2 * c.$n_54 / math.pow(c.$phi, 1))

// ~ 41.250
$twice_54_by_phi_power_2: calc(2 * c.$n_54 / math.pow(c.$phi, 2))

// ~ 25.500
$twice_54_by_phi_power_3: calc(2 * c.$n_54 / math.pow(c.$phi, 3))

// ~ 15.750
$twice_54_by_phi_power_4: calc(2 * c.$n_54 / math.pow(c.$phi, 4))

// ~ 9.750
$twice_54_by_phi_power_5: calc(2 * c.$n_54 / math.pow(c.$phi, 5))

// ~ 6.000
$twice_54_by_phi_power_6: calc(2 * c.$n_54 / math.pow(c.$phi, 6))

// ~ 3.750
$twice_54_by_phi_power_7: calc(2 * c.$n_54 / math.pow(c.$phi, 7))

// ~ 2.250
$twice_54_by_phi_power_8: calc(2 * c.$n_54 / math.pow(c.$phi, 8))

// ~ 1.375
$twice_54_by_phi_power_9: calc(2 * c.$n_54 / math.pow(c.$phi, 9))