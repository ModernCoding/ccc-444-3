@use 'sass:math'

@use '@/assets/sass/colors' as colors
@use '@/assets/sass/constants' as constants
@use '@/assets/sass/dimensions' as dimensions
@use '@/assets/sass/grid' as grid
@use '@/assets/sass/sizes' as sizes


figure
  padding: 0


@each $i in (1, 2, 3, 4, 5, 6)

  h#{ $i }
    color: colors.$light


#__nuxt

  background-color: colors.$dark
  box-sizing: border-box

  height: 100vh
  height: dimensions.$height
  width: 100%
  overflow: hidden


  @media screen and (orientation: landscape)
    padding-top: dimensions.$layoutPaddingTopLandscape
    // padding-right: dimensions.$layoutPaddingRightPortrait
    padding-bottom: dimensions.$layoutPaddingBottomLandscape
    // padding-left: dimensions.$layoutPaddingLeftPortrait

  @media screen and (orientation: portrait)
    padding-top: dimensions.$layoutPaddingTopPortrait
    padding-right: dimensions.$layoutPaddingRightPortrait
    padding-bottom: dimensions.$layoutPaddingBottomPortrait
    padding-left: dimensions.$layoutPaddingLeftPortrait


  > *
    color: colors.$light

    @media screen and (orientation: landscape)
      height: dimensions.$heightSectionLandscape


  > header

    *
      font-size: sizes.$twice_54_by_phi_power_4 * 1px

    @media screen and (orientation: portrait)
      height: dimensions.$heightHeaderPortrait


    @media screen and (orientation: landscape)

      display: flex
      align-items: center
      width: 100%

      height: dimensions.$heightHeaderLandscape


      // only if not at least xxl-half

      > nav
        // flex-grow: 1
        
        // display: flex
        // align-items: center

        // > div
        //   padding-right: dimensions.$asidePaddingRight
        //   padding-left: dimensions.$asidePaddingLeft
        //   width: dimensions.$asideWidth

        // > menu
        //   padding-right: dimensions.$mainPaddingRight
        //   padding-left: dimensions.$mainPaddingLeft
        //   width: dimensions.$mainWidth

        //   > ul
        //     display: flex
        //     align-items: center
        //     gap: sizes.$twice_54_by_phi_power_2 * 1px

        //     > li
        //       font-size: sizes.$twice_54_by_phi_power_4 * 1px
        //       letter-spacing: math.div(sizes.$twice_54_by_phi_power_4, math.pow(constants.$phi, 2)) * 1px
        //       text-transform: uppercase


  > section

    display: flex
    align-items: stretch


    @media screen and (orientation: portrait)

      flex-direction: column


      > aside
      
        display: flex
        justify-content: center

        height: dimensions.$heightAsidePortrait
        width: 100%

        > nav
          display: flex
          align-items: center

          > menu

            > ul
              display: flex
              flex-wrap: wrap
              align-items: center
              gap: 0 sizes.$twice_54_by_phi_power_2 * 1px

              > li
                font-size: sizes.$twice_54_by_phi_power_4 * 1px
                letter-spacing: math.div(sizes.$twice_54_by_phi_power_4, math.pow(constants.$phi, 2)) * 1px
                text-transform: uppercase


      > main[role="main"]

        height: dimensions.$heightMainPortrait
        width: 100%

        > *
          // height: 100%
          overflow-y: auto


    @media screen and (orientation: landscape)

      > aside
        border-right: 1px solid colors.$light-3
        text-align: right
        padding-right: dimensions.$asidePaddingRight
        padding-left: dimensions.$asidePaddingLeft
        width: dimensions.$asideWidth

        @media screen and (min-width: grid.$xxl-half)
          padding-right: dimensions.$asidePaddingRightXxlHalf
          padding-left: dimensions.$asidePaddingLeftXxlHalf
          width: dimensions.$asideWidthXxlHalf


        > div
          height: 100%


      // menu; only for at least xxl-half width
      
      > menu
        border-right: 1px solid colors.$light-3
        padding-right: dimensions.$menuPaddingRight
        padding-left: dimensions.$menuPaddingLeft
        width: dimensions.$menuWidth

        > *
          height: 100%


      > main[role="main"]
        padding-right: dimensions.$mainPaddingRight
        padding-left: dimensions.$mainPaddingLeft
        width: dimensions.$mainWidth

        @media screen and (min-width: grid.$xxl-half)
          padding-right: dimensions.$mainPaddingRightXxlHalf
          padding-left: dimensions.$mainPaddingLeftXxlHalf

        > *
          height: 100%
          overflow-y: auto


  > footer

    @media screen and (orientation: landscape)
      height: dimensions.$heightFooterLandscape

    @media screen and (orientation: portrait)
      height: dimensions.$heightFooterPortrait