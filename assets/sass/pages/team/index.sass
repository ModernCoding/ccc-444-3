@use "sass:math"

@use '@/assets/sass/constants' as constants
@use '@/assets/sass/dimensions' as dimensions
@use '@/assets/sass/grid' as grid
@use '@/assets/sass/sizes' as sizes


#team
  overflow-y: auto !important

  &[data-number-of-parts="1"]
    height: dimensions.$heightMainOnePart


  > .o-introduction

    *
      font-size: sizes.$twice_54_by_phi_power_4 * 1px
      padding-bottom: sizes.$twice_54_by_phi_power_3 * 1px

      @media screen and (min-width: grid.$md-half)
        font-size: sizes.$twice_54_by_phi_power_3 * 1px
        padding-bottom: sizes.$twice_54_by_phi_power_2 * 1px

      @media screen and (min-width: grid.$md-twice)
        font-size: sizes.$twice_54_by_phi_power_2 * 1px
        padding-bottom: sizes.$twice_54_by_phi * 1px


.o-introduction
  display: flex
  flex-direction: column
  align-items: center
  justify-content: center
  text-align: center

  > h1
    text-transform: uppercase

    .o-underline
      text-decoration: underline


.o-members
  display: flex
  flex-direction: column


  > a

    > figure
      display: flex
      align-items: center

      figcaption
        flex-grow: 1


  &[data-number-of-parts="1"]

    gap: calc(dimensions.$heightHeaderOnePart / constants.$phi)


    > a

      > figure

        gap: calc(dimensions.$layoutPaddingRightOnePart / constants.$phi)

        // picture, img
        picture

          width: calc(dimensions.$mainWidthOnePart / math.pow(constants.$phi, 2) - dimensions.$layoutPaddingRightOnePart / constants.$phi)


  &[data-number-of-parts="2"],
  &[data-number-of-parts="3"]
  
    gap: calc(dimensions.$heightHeaderTwoParts / math.pow(constants.$phi, 2))


  &[data-number-of-parts="2"]

    > a

      > figure

        gap: calc(dimensions.$layoutPaddingRightTwoParts / math.pow(constants.$phi, 2))


        picture, img

          width: calc(dimensions.$mainWidthTwoParts / math.pow(constants.$phi, 2) - dimensions.$layoutPaddingRightTwoParts / math.pow(constants.$phi, 2))


  &[data-number-of-parts="3"]

    > a

      > figure

        gap: calc(dimensions.$layoutPaddingRightThreeParts / math.pow(constants.$phi, 2))


        picture, img

          width: calc(dimensions.$mainWidthThreeParts / math.pow(constants.$phi, 2) - dimensions.$layoutPaddingRightThreeParts / math.pow(constants.$phi, 2))


  figcaption

    h1
      text-transform: uppercase

    *
      text-align: center

      &:not([data-wrap="1"])
        text-wrap: nowrap


.o-title
  display: flex
  align-items: center
  justify-content: center
  text-wrap: nowrap


#team-girls

  figure

    $_gapOnePart: dimensions.$layoutPaddingRightOnePart

    $_gapTwoParts: calc(dimensions.$layoutPaddingRightTwoParts / constants.$phi)

    $_gapThreeParts: calc(dimensions.$asideMarginRightThreeParts / constants.$phi)


    display: flex
    align-items: center
    justify-content: center


    &[data-number-of-parts="1"]

      gap: $_gapOnePart
    
      img
        width: calc(100% / 3 - $_gapOnePart / 3 * 2)


    &[data-number-of-parts="2"]

      gap: $_gapTwoParts

      img
        width: calc(100% / 3 - $_gapTwoParts / 3 * 2)


    &[data-number-of-parts="3"]

      gap: $_gapThreeParts

      img
        width: calc(100% / 3 - $_gapThreeParts / 3 * 2)